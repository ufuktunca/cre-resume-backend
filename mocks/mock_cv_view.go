// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/cv/view.go

package mocks

import (
	models "cre-resume-backend/internal/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCVViewInterface is a mock of CVViewInterface interface
type MockCVViewInterface struct {
	ctrl     *gomock.Controller
	recorder *MockCVViewInterfaceMockRecorder
}

// MockCVViewInterfaceMockRecorder is the mock recorder for MockCVViewInterface
type MockCVViewInterfaceMockRecorder struct {
	mock *MockCVViewInterface
}

// NewMockCVViewInterface creates a new mock instance
func NewMockCVViewInterface(ctrl *gomock.Controller) *MockCVViewInterface {
	mock := &MockCVViewInterface{ctrl: ctrl}
	mock.recorder = &MockCVViewInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockCVViewInterface) EXPECT() *MockCVViewInterfaceMockRecorder {
	return _m.recorder
}

// CreateCV mocks base method
func (_m *MockCVViewInterface) CreateCV(cvData *models.CV, userID string) error {
	ret := _m.ctrl.Call(_m, "CreateCV", cvData, userID)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateCV indicates an expected call of CreateCV
func (_mr *MockCVViewInterfaceMockRecorder) CreateCV(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "CreateCV", reflect.TypeOf((*MockCVViewInterface)(nil).CreateCV), arg0, arg1)
}

// GetCVs mocks base method
func (_m *MockCVViewInterface) GetCVs(userID string) (*[]models.CV, error) {
	ret := _m.ctrl.Call(_m, "GetCVs", userID)
	ret0, _ := ret[0].(*[]models.CV)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCVs indicates an expected call of GetCVs
func (_mr *MockCVViewInterfaceMockRecorder) GetCVs(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "GetCVs", reflect.TypeOf((*MockCVViewInterface)(nil).GetCVs), arg0)
}

// GetCV mocks base method
func (_m *MockCVViewInterface) GetCV(cvID string) ([]byte, string, error) {
	ret := _m.ctrl.Call(_m, "GetCV", cvID)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetCV indicates an expected call of GetCV
func (_mr *MockCVViewInterfaceMockRecorder) GetCV(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "GetCV", reflect.TypeOf((*MockCVViewInterface)(nil).GetCV), arg0)
}
