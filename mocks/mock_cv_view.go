// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/cv/view.go

package mocks

import (
	models "cre-resume-backend/internal/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCVViewInterface is a mock of CVViewInterface interface
type MockCVViewInterface struct {
	ctrl     *gomock.Controller
	recorder *MockCVViewInterfaceMockRecorder
}

// MockCVViewInterfaceMockRecorder is the mock recorder for MockCVViewInterface
type MockCVViewInterfaceMockRecorder struct {
	mock *MockCVViewInterface
}

// NewMockCVViewInterface creates a new mock instance
func NewMockCVViewInterface(ctrl *gomock.Controller) *MockCVViewInterface {
	mock := &MockCVViewInterface{ctrl: ctrl}
	mock.recorder = &MockCVViewInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockCVViewInterface) EXPECT() *MockCVViewInterfaceMockRecorder {
	return _m.recorder
}

// CreateCV mocks base method
func (_m *MockCVViewInterface) CreateCV(cvData *models.CV, ownerEmail string) error {
	ret := _m.ctrl.Call(_m, "CreateCV", cvData, ownerEmail)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateCV indicates an expected call of CreateCV
func (_mr *MockCVViewInterfaceMockRecorder) CreateCV(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "CreateCV", reflect.TypeOf((*MockCVViewInterface)(nil).CreateCV), arg0, arg1)
}
