// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/job-post/repository.go

package mocks

import (
	models "cre-resume-backend/internal/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockJobPostRepositoryInterface is a mock of JobPostRepositoryInterface interface
type MockJobPostRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockJobPostRepositoryInterfaceMockRecorder
}

// MockJobPostRepositoryInterfaceMockRecorder is the mock recorder for MockJobPostRepositoryInterface
type MockJobPostRepositoryInterfaceMockRecorder struct {
	mock *MockJobPostRepositoryInterface
}

// NewMockJobPostRepositoryInterface creates a new mock instance
func NewMockJobPostRepositoryInterface(ctrl *gomock.Controller) *MockJobPostRepositoryInterface {
	mock := &MockJobPostRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockJobPostRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockJobPostRepositoryInterface) EXPECT() *MockJobPostRepositoryInterfaceMockRecorder {
	return _m.recorder
}

// CreateJobPost mocks base method
func (_m *MockJobPostRepositoryInterface) CreateJobPost(jobPost *models.JobPost) error {
	ret := _m.ctrl.Call(_m, "CreateJobPost", jobPost)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateJobPost indicates an expected call of CreateJobPost
func (_mr *MockJobPostRepositoryInterfaceMockRecorder) CreateJobPost(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "CreateJobPost", reflect.TypeOf((*MockJobPostRepositoryInterface)(nil).CreateJobPost), arg0)
}

// GetJobPosts mocks base method
func (_m *MockJobPostRepositoryInterface) GetJobPosts(jobPostType string, category string, from string, to string, sort string) (*[]models.JobPost, error) {
	ret := _m.ctrl.Call(_m, "GetJobPosts", jobPostType, category, from, to, sort)
	ret0, _ := ret[0].(*[]models.JobPost)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetJobPosts indicates an expected call of GetJobPosts
func (_mr *MockJobPostRepositoryInterfaceMockRecorder) GetJobPosts(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "GetJobPosts", reflect.TypeOf((*MockJobPostRepositoryInterface)(nil).GetJobPosts), arg0, arg1, arg2, arg3, arg4)
}

// GetJobPostByID mocks base method
func (_m *MockJobPostRepositoryInterface) GetJobPostByID(id string) (*models.JobPost, error) {
	ret := _m.ctrl.Call(_m, "GetJobPostByID", id)
	ret0, _ := ret[0].(*models.JobPost)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetJobPostByID indicates an expected call of GetJobPostByID
func (_mr *MockJobPostRepositoryInterfaceMockRecorder) GetJobPostByID(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "GetJobPostByID", reflect.TypeOf((*MockJobPostRepositoryInterface)(nil).GetJobPostByID), arg0)
}

// CreateApplyJobPost mocks base method
func (_m *MockJobPostRepositoryInterface) CreateApplyJobPost(applyJobPost *models.ApplyJobPost) error {
	ret := _m.ctrl.Call(_m, "CreateApplyJobPost", applyJobPost)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateApplyJobPost indicates an expected call of CreateApplyJobPost
func (_mr *MockJobPostRepositoryInterfaceMockRecorder) CreateApplyJobPost(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "CreateApplyJobPost", reflect.TypeOf((*MockJobPostRepositoryInterface)(nil).CreateApplyJobPost), arg0)
}
