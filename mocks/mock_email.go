// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/email/email.go

package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockEmailInterface is a mock of EmailInterface interface
type MockEmailInterface struct {
	ctrl     *gomock.Controller
	recorder *MockEmailInterfaceMockRecorder
}

// MockEmailInterfaceMockRecorder is the mock recorder for MockEmailInterface
type MockEmailInterfaceMockRecorder struct {
	mock *MockEmailInterface
}

// NewMockEmailInterface creates a new mock instance
func NewMockEmailInterface(ctrl *gomock.Controller) *MockEmailInterface {
	mock := &MockEmailInterface{ctrl: ctrl}
	mock.recorder = &MockEmailInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockEmailInterface) EXPECT() *MockEmailInterfaceMockRecorder {
	return _m.recorder
}

// SendMail mocks base method
func (_m *MockEmailInterface) SendMail(registeredUser string, message string) error {
	ret := _m.ctrl.Call(_m, "SendMail", registeredUser, message)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendMail indicates an expected call of SendMail
func (_mr *MockEmailInterfaceMockRecorder) SendMail(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "SendMail", reflect.TypeOf((*MockEmailInterface)(nil).SendMail), arg0, arg1)
}
